// Generated by CoffeeScript 1.4.0
(function() {
  var canvas, ctx, onError, onSuccess, predict, setupWS, train, update, video,
    _this = this;

  onError = function(e) {
    return console.log("Rejected", e);
  };

  onSuccess = function(localMediaStream) {
    video.src = webkitURL.createObjectURL(localMediaStream);
    return setInterval(update, 250);
  };

  setupWS = function(url) {
    var _ref;
    if ((_ref = window.ws) != null) {
      _ref.close();
    }
    window.ws = new WebSocket("ws://" + location.host + "/" + url);
    return window.ws.onopen = function() {
      return console.log("Opened websocket " + url);
    };
  };

  update = function() {
    ctx.drawImage(video, 0, 0, 320, 240);
    return canvas.toBlob(function(blob) {
      var _ref;
      return (_ref = window.ws) != null ? _ref.send(blob) : void 0;
    }, 'image/jpeg');
  };

  video = document.querySelector('video');

  canvas = document.querySelector('canvas');

  ctx = canvas.getContext('2d');

  predict = function() {
    var counter,
      _this = this;
    console.log('Started to predict');
    counter = 0;
    return window.ws.onmessage = function(e) {
      var data, distance, name;
      data = JSON.parse(e.data);
      if (data) {
        name = data[0];
        distance = data[1];
        if (distance < 1000.0) {
          $('.prettyprint').text(data);
        } else {
          counter += 1;
        }
        if (counter > 10) {
          console.log(counter);
          counter = 0;
          window.ws.close();
          console.log('about to start trainin');
          return train();
        }
      }
    };
  };

  train = function() {
    var saveLabel, startHarvest;
    console.log('started training');
    startHarvest = function() {
      setupWS('harvesting');
      return window.ws.onmessage = function(e) {
        console.log("closing training websocket");
        window.ws.close();
        return $.post('/train').success(function() {
          console.log("done training");
          setupWS('predict');
          return predict();
        });
      };
    };
    saveLabel = function(label) {
      console.log("saving " + label);
      return $.post('/harvest', {
        label: label
      }).success(function() {
        return startHarvest();
      });
    };
    return $('#start').click(function(e) {
      var label;
      e.preventDefault();
      label = $('#name').val();
      if (label) {
        return saveLabel(label);
      }
    });
  };

  navigator.webkitGetUserMedia({
    'video': true,
    'audio': false
  }, onSuccess, onError);

  setupWS('predict');

  predict();

  $('#stop').click(function(e) {
    e.preventDefault();
    return window.ws.close();
  });

  $('#train').click(function(e) {
    e.preventDefault();
    return $.post('/train').success(function() {
      return console.log("done training");
    });
  });

}).call(this);
